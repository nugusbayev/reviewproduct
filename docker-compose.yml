version: "3.3"

services:
  product:
    container_name: product
    image: product:latest
    environment:
      REVIEW_BASE_URL: review
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - local-keycloak

  review:
    container_name: review
    image: review:latest
    environment:
      DB_HOST: postgres
      DB_NAME: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASS: ${POSTGRESQL_PASS}
      REDIS_HOST: redis
      KEYCLOAK_ADDRESS: keycloak:8080
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - local-keycloak
    depends_on:
      - postgres
      - redis
      - keycloak
    links:
      - "postgres:postgres"
      - "redis:redis"
      - "keycloak:keycloak"

  postgres:
    container_name: postgres
    image: library/postgres
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - local-keycloak
  
  redis:
    container_name: redis
    image: redis:5.0.4-alpine
    restart: always
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - local-keycloak

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin_password
    ports:
      - "8484:8080"
    depends_on:
      - postgres
    links:
      - "postgres:postgres"
    restart: unless-stopped
    networks:
      - local-keycloak

networks:
  local-keycloak:
